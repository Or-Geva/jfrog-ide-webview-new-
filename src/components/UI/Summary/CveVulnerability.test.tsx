import { render } from '@testing-library/react'
import CveVulnerability from './CveVulnerability'
import { IDependencyPage, PageType } from '../../../model/webviewPages'
import { ISeverity } from '../../../model/severity'
describe('CveVulnerability component', () => {
	test('renders CveVulnerability component', () => {
		const data2: IDependencyPage = {
			id: '123',
			pageType: PageType.Dependency,
			componentType: 'Maven',
			severity: ISeverity.Low,
			component: 'example-component',
			version: '1.2.3',
			cve: {
				id: 'a',
				applicableData: {
					isApplicable: true
				},
				cvssV3Score: '7.5'
			},
			impactGraph: {},
			edited: '',
			license: [{ name: 'MIT' }],
			watchName: ['watch1', 'watch2'],
			fixedVersion: ['1.0.0'],
			extendedInformation: {
				shortDescription: '',
				fullDescription: '',
				jfrogResearchSeverity: ISeverity.High
			}
		} as IDependencyPage

		const { getByText } = render(<CveVulnerability data={data2} />)

		expect(getByText('Component:')).toBeInTheDocument()
		expect(getByText('Severity:')).toBeInTheDocument()
		expect(getByText('JFrog severity:')).toBeInTheDocument()
		expect(getByText('CVSS score:')).toBeInTheDocument()
		expect(getByText('License:')).toBeInTheDocument()
		expect(getByText('Watch:')).toBeInTheDocument()
		expect(getByText('Fixed version:')).toBeInTheDocument()
		expect(getByText('Version:')).toBeInTheDocument()
		expect(getByText('Type:')).toBeInTheDocument()
		expect(getByText('ID:')).toBeInTheDocument()
	})
})
